name: ffmpeg
on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
    paths-ignore:
      - '*.md'
      - 'docs/**'
  pull_request:
  workflow_dispatch:
  release:
    types: [ published ]
env:
  CI_DEPLOY_NEED_GCC: 1
  CI_DEPLOY_MODULE: ${{ github.workflow }}
  CI_DEPLOY_PLATFORM: ${{ github.job }}
  REPOSILITE_USERNAME: ${{ secrets.REPOSILITE_USERNAME }}
  REPOSILITE_PASSWORD: ${{ secrets.REPOSILITE_PASSWORD }}
  # deploy to snapshots if not a release
  REPOSILITE_URL: ${{ github.event_name == 'release' && 'https://reposilite.silenium.dev/releases' || 'https://reposilite.silenium.dev/snapshots' }}
permissions:
  contents: write
jobs:
  #  android-arm:
  #    runs-on: ubuntu-22.04
  #    strategy:
  #      matrix:
  #        gpl: ["false", "true"]
  #    steps:
  #      - uses: actions/checkout@v4
  #      - uses: ./.github/actions/deploy-ubuntu
  #  android-arm64:
  #    runs-on: ubuntu-22.04
  #    strategy:
  #      matrix:
  #        gpl: ["false", "true"]
  #    steps:
  #      - uses: actions/checkout@v4
  #      - uses: ./.github/actions/deploy-ubuntu
  #  android-x86:
  #    runs-on: ubuntu-22.04
  #    strategy:
  #      matrix:
  #        gpl: ["false", "true"]
  #    steps:
  #      - uses: actions/checkout@v4
  #      - uses: ./.github/actions/deploy-ubuntu
  #  android-x86_64:
  #    runs-on: ubuntu-22.04
  #    strategy:
  #      matrix:
  #        gpl: ["false", "true"]
  #    steps:
  #      - uses: actions/checkout@v4
  #      - uses: ./.github/actions/deploy-ubuntu
  linux-arm:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        gpl: ["false", "true"]
    name: linux-arm (${{ matrix.gpl == 'true' && 'GPL' || 'LGPL' }})
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/deploy-ubuntu
        with:
          gradle-cache-encryption-key: ${{ secrets.GRADLE_CACHE_ENCRYPTION_KEY }}
  linux-arm64:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        gpl: ["false", "true"]
    name: linux-arm64 (${{ matrix.gpl == 'true' && 'GPL' || 'LGPL' }})
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/deploy-ubuntu
        with:
          gradle-cache-encryption-key: ${{ secrets.GRADLE_CACHE_ENCRYPTION_KEY }}
  linux-ppc64le:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        gpl: ["false", "true"]
    name: linux-ppc64le (${{ matrix.gpl == 'true' && 'GPL' || 'LGPL' }})
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/deploy-ubuntu
        with:
          gradle-cache-encryption-key: ${{ secrets.GRADLE_CACHE_ENCRYPTION_KEY }}
  linux-x86:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        gpl: ["false", "true"]
    name: linux-x86 (${{ matrix.gpl == 'true' && 'GPL' || 'LGPL' }})
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/deploy-ubuntu
        with:
          gradle-cache-encryption-key: ${{ secrets.GRADLE_CACHE_ENCRYPTION_KEY }}
  linux-x86_64:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        gpl: ["false", "true"]
    name: linux-x86_64 (${{ matrix.gpl == 'true' && 'GPL' || 'LGPL' }})
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/deploy-ubuntu
        with:
          gradle-cache-encryption-key: ${{ secrets.GRADLE_CACHE_ENCRYPTION_KEY }}
#  macosx-arm64:
#    runs-on: macos-12
#    strategy:
#      matrix:
#        gpl: ["false", "true"]
#    steps:
#      - uses: actions/checkout@v4
#      - uses: ./.github/actions/deploy-macosx
#  macosx-x86_64:
#    runs-on: macos-12
#    strategy:
#      matrix:
#        gpl: ["false", "true"]
#    steps:
#      - uses: actions/checkout@v4
#      - uses: ./.github/actions/deploy-macosx
#  windows-x86:
#    runs-on: windows-2019
#    strategy:
#      matrix:
#        gpl: ["false", "true"]
#    steps:
#      - uses: actions/checkout@v4
#      - uses: ./.github/actions/deploy-windows
#  windows-x86_64:
#    runs-on: windows-2019
#    strategy:
#      matrix:
#        gpl: ["false", "true"]
#    steps:
#      - uses: actions/checkout@v4
#      - uses: ./.github/actions/deploy-windows
#  redeploy:
#    needs: [android-arm, android-arm64, android-x86, android-x86_64, linux-arm, linux-arm64, linux-ppc64le, linux-x86, linux-x86_64, macosx-arm64, macosx-x86_64, windows-x86, windows-x86_64]
#    needs: [android-arm64, android-x86_64, linux-arm64, linux-ppc64le, linux-x86_64, macosx-arm64, macosx-x86_64, windows-x86_64]
#    runs-on: ubuntu-22.04
#    steps:
#      - uses: actions/checkout@v4
#      - uses: ./.github/actions/redeploy
  deploy-kotlin:
    name: Publish Kotlin artifacts
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/deploy-kotlin
        with:
          gradle-cache-encryption-key: ${{ secrets.GRADLE_CACHE_ENCRYPTION_KEY }}
