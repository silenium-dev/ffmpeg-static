name: ffmpeg
on:
  push:
    tags-ignore:
      - '*'
  pull_request:
  workflow_dispatch:
  release:
    types: [ published ]
env:
  CI_DEPLOY_NEED_GCC: 1
  CI_DEPLOY_MODULE: ${{ github.workflow }}
  CI_DEPLOY_PLATFORM: ${{ github.job }}
  CI_DEPLOY_SETTINGS: ${{ secrets.CI_DEPLOY_SETTINGS }}
  CI_DEPLOY_USERNAME: ${{ secrets.CI_DEPLOY_USERNAME }}
  CI_DEPLOY_PASSWORD: ${{ secrets.CI_DEPLOY_PASSWORD }}
  STAGING_REPOSITORY: ${{ secrets.STAGING_REPOSITORY }}
  REPOSILITE_USERNAME: ${{ secrets.REPOSILITE_USERNAME }}
  REPOSILITE_PASSWORD: ${{ secrets.REPOSILITE_PASSWORD }}
  # deploy to snapshots if not a release
  REPOSILITE_URL: ${{ github.event_name == 'release' && 'https://reposilite.silenium.dev/releases' || 'https://reposilite.silenium.dev/snapshots' }}
permissions:
  contents: write
jobs:
  #  android-arm:
  #    runs-on: ubuntu-22.04
  #    strategy:
  #      matrix:
  #        gpl: ["false", "true"]
  #    steps:
  #      - uses: actions/checkout@v4
  #      - uses: ./.github/actions/deploy-ubuntu
  #  android-arm64:
  #    runs-on: ubuntu-22.04
  #    strategy:
  #      matrix:
  #        gpl: ["false", "true"]
  #    steps:
  #      - uses: actions/checkout@v4
  #      - uses: ./.github/actions/deploy-ubuntu
  #  android-x86:
  #    runs-on: ubuntu-22.04
  #    strategy:
  #      matrix:
  #        gpl: ["false", "true"]
  #    steps:
  #      - uses: actions/checkout@v4
  #      - uses: ./.github/actions/deploy-ubuntu
  #  android-x86_64:
  #    runs-on: ubuntu-22.04
  #    strategy:
  #      matrix:
  #        gpl: ["false", "true"]
  #    steps:
  #      - uses: actions/checkout@v4
  #      - uses: ./.github/actions/deploy-ubuntu
  #  linux-armhf:
  #    runs-on: ubuntu-22.04
  #    strategy:
  #      matrix:
  #        gpl: ["false", "true"]
  #    steps:
  #      - uses: actions/checkout@v4
  #      - uses: ./.github/actions/deploy-ubuntu
  #  linux-arm64:
  #    runs-on: ubuntu-22.04
  #    strategy:
  #      matrix:
  #        gpl: ["false", "true"]
  #    steps:
  #      - uses: actions/checkout@v4
  #      - uses: ./.github/actions/deploy-ubuntu
  #  linux-ppc64le:
  #    runs-on: ubuntu-22.04
  #    strategy:
  #      matrix:
  #        gpl: ["false", "true"]
  #    steps:
  #      - uses: actions/checkout@v4
  #      - uses: ./.github/actions/deploy-ubuntu
  #  linux-x86:
  #    runs-on: ubuntu-22.04
  #    strategy:
  #      matrix:
  #        gpl: ["false", "true"]
  #    steps:
  #      - uses: actions/checkout@v4
  #      - uses: ./.github/actions/deploy-ubuntu
  linux-x86_64:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        gpl: ["false", "true"]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/deploy-ubuntu
        with:
          gradle-cache-encryption-key: ${{ secrets.GRADLE_CACHE_ENCRYPTION_KEY }}
#  macosx-arm64:
#    runs-on: macos-12
#    strategy:
#      matrix:
#        gpl: ["false", "true"]
#    steps:
#      - uses: actions/checkout@v4
#      - uses: ./.github/actions/deploy-macosx
#  macosx-x86_64:
#    runs-on: macos-12
#    strategy:
#      matrix:
#        gpl: ["false", "true"]
#    steps:
#      - uses: actions/checkout@v4
#      - uses: ./.github/actions/deploy-macosx
#  windows-x86:
#    runs-on: windows-2019
#    strategy:
#      matrix:
#        gpl: ["false", "true"]
#    steps:
#      - uses: actions/checkout@v4
#      - uses: ./.github/actions/deploy-windows
#  windows-x86_64:
#    runs-on: windows-2019
#    strategy:
#      matrix:
#        gpl: ["false", "true"]
#    steps:
#      - uses: actions/checkout@v4
#      - uses: ./.github/actions/deploy-windows
#  redeploy:
#    needs: [android-arm, android-arm64, android-x86, android-x86_64, linux-armhf, linux-arm64, linux-ppc64le, linux-x86, linux-x86_64, macosx-arm64, macosx-x86_64, windows-x86, windows-x86_64]
#    needs: [android-arm64, android-x86_64, linux-arm64, linux-ppc64le, linux-x86_64, macosx-arm64, macosx-x86_64, windows-x86_64]
#    runs-on: ubuntu-22.04
#    steps:
#      - uses: actions/checkout@v4
#      - uses: ./.github/actions/redeploy
  deploy-kotlin:
    name: Publish Kotlin artifacts
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-encryption-key: ${{ inputs.gradle-cache-encryption-key }}
          gradle-home-cache-cleanup: true
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"
          add-job-summary-as-pr-comment: on-failure

      - name: Publish release
        shell: bash
        if: "github.event_name == 'release'"
        run: ./gradlew build publish -Pdeploy.native=false -Pdeploy.kotlin=true -Pffmpeg.gpl=${{ matrix.gpl }} -Pdeploy.version=${{ github.event.release.tag_name }} --console=plain --info --configure-on-demand --parallel --build-cache

      - name: Publish snapshot
        shell: bash
        if: "github.event_name != 'release'"
        run: ./gradlew build publish -Pdeploy.native=false -Pdeploy.kotlin=true -Pffmpeg.gpl=${{ matrix.gpl }} --console=plain --info --configure-on-demand --parallel --build-cache
